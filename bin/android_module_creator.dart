import 'dart:io';

import 'package:logger/logger.dart';

import 'android_setup.dart';

/// Responsible for creating a new android module in the /android directory
/// of the flutter project.
class AndroidModuleCreator {
  String moduleName;
  String aarFileName;

  AndroidModuleCreator(this.moduleName, this.aarFileName);

  String _gradleFileContent(String aarFileName) => '''
configurations.maybeCreate("default")
artifacts.add("default", file('$aarFileName'))
''';

  String _readmeContent(String moduleName, String aarFileName) => '''
# Spotify Android SDK for Flutter
This module (`:$moduleName`) was generated by running the `android_setup` script of
the [spotify_sdk](https://pub.dev/packages/spotify_sdk) plugin.

If you want to update the `aar`-library, please run the `android_setup` script using
one of the following commands:
```
dart run spotify_sdk:android_setup --cleanup
flutter pub run spotify_sdk:android_setup --cleanup
```
''';

  Future<void> createModuleDirectory() async {
    // create directory in /android
    final aarDir = await Directory('android/$moduleName').create();
    logger.t('created new directory ${aarDir.path}');

    // create build.gradle file
    final gradleFile = await File('${aarDir.path}/build.gradle').create();
    logger.t('created new file ${gradleFile.path}');
    await gradleFile.writeAsString(_gradleFileContent(aarFileName));

    _settingsGradle(logger);

    _appBuildGradle(logger);

    // create README.md file
    final readmeFile = await File('${aarDir.path}/README.md').create();
    logger.t('created new file ${readmeFile.path}');
    await readmeFile.writeAsString(_readmeContent(moduleName, aarFileName));
  }

  void _settingsGradle(Logger logger) async {
    // edit settings.gradle file
    final settingsFile = await File('android/settings.gradle').readAsString();
    final includeStatement = "include ':$moduleName'";
    if (settingsFile.contains(includeStatement)) {
      logger.t('settings.gradle already contains $includeStatement');
    } else {
      final String newSettingsFile;
      if (settingsFile.contains("include ':app'")) {
        newSettingsFile = settingsFile.replaceFirst(
            'include \':app\'', 'include \':app\'\ninclude \':$moduleName\'');
      } else {
        newSettingsFile = settingsFile.replaceFirst(
            'include ":app"', 'include ":app"\ninclude ":$moduleName"');
      }
      await File('android/settings.gradle').writeAsString(newSettingsFile);
      logger.t('added "$includeStatement" to android/settings.gradle');
    }
  }

  void _appBuildGradle(Logger logger) async {
    // edit app/build.gradle file
    final appBuildFile = await File('android/app/build.gradle').readAsString();
    if (!appBuildFile.contains('defaultConfig')) {
      logger.e(
          'Error: The file "android/app/build.gradle" does not contain a defaultConfig block. '
          'Your android project might be misconfigured.');
      return;
    }
    if (appBuildFile.contains('manifestPlaceholders')) {
      logger.w(
          'android/app/build.gradle already contains manifestPlaceholders. '
          'Make sure to update the redirect scheme and host name manually if necessary.');
      return;
    }

    final String newAppBuildFile = appBuildFile.replaceFirst(
        'defaultConfig {',
        'defaultConfig {\n'
            '       manifestPlaceholders = [redirectSchemeName: "spotify-sdk", redirectHostName: "auth"]');
    await File('android/app/build.gradle').writeAsString(newAppBuildFile);
    logger.t('added manifestPlaceholders to android/app/build.gradle');
  }
}
